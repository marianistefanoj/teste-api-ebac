{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-23T01:39:17.048Z",
    "end": "2023-08-23T01:39:17.731Z",
    "duration": 683,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "44b27be2-91a1-4b5e-92bf-823e0815f6f6",
      "title": "",
      "fullFile": "cypress\\e2e\\produtos.cy.js",
      "file": "cypress\\e2e\\produtos.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7d84f7f9-b4ac-42eb-acee-86d952241597",
          "title": "Testes da funcionalidade produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de produtos",
              "fullTitle": "Testes da funcionalidade produtos Deve validar contrato de produtos",
              "timedOut": null,
              "duration": 147,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  return _produtos.default.validateAsync(response.body);\n});",
              "err": {},
              "uuid": "5eeee467-3459-4474-a155-3ea61c4a10b6",
              "parentUUID": "7d84f7f9-b4ac-42eb-acee-86d952241597",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET - Deve listar todos os produtos cadastrados",
              "fullTitle": "Testes da funcionalidade produtos GET - Deve listar todos os produtos cadastrados",
              "timedOut": null,
              "duration": 85,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: '/produtos'\n}).then(response => {\n  //expect(response.body.produtos[0].nome).to.equal('Logitech MX Vertical'),\n  expect(response.status).to.equal(200), expect(response.body.produtos[0].nome).not.equal(''), expect(response.body).to.have.property('produtos'), expect(response.duration).to.be.lessThan(100);\n});",
              "err": {},
              "uuid": "58b33bd7-1665-4d55-9e5a-015dd9c5ebe7",
              "parentUUID": "7d84f7f9-b4ac-42eb-acee-86d952241597",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST - Cadastrar produto",
              "fullTitle": "Testes da funcionalidade produtos POST - Cadastrar produto",
              "timedOut": null,
              "duration": 62,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'POST',\n  url: '/produtos',\n  body: {\n    \"nome\": produto,\n    \"preco\": 200,\n    \"descricao\": \"Produto Novo\",\n    \"quantidade\": 100\n  },\n  headers: {\n    authorization: token\n  }\n}).then(response => {\n  expect(response.status).to.be.equal(201), expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "c42711d5-81dc-478c-a478-3a7e557a6d2c",
              "parentUUID": "7d84f7f9-b4ac-42eb-acee-86d952241597",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Deve validar mensagem de erro ao cadastrar produto repetido",
              "fullTitle": "Testes da funcionalidade produtos PUT - Deve validar mensagem de erro ao cadastrar produto repetido",
              "timedOut": null,
              "duration": 70,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//usou comando personalizado para tentar cadastrar um produto novo e fez as validações de que o mesmo ja havia sido cadastrado anteriormente\ncy.cadastrarProduto(token, produto, 100, produto, 10).then(response => {\n  expect(response.status).to.be.equal(400);\n  expect(response.body.message).to.equal('Já existe produto com esse nome');\n});",
              "err": {},
              "uuid": "7607d512-0c63-41e1-9c7a-d7d34c01f89b",
              "parentUUID": "7d84f7f9-b4ac-42eb-acee-86d952241597",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Deve editar um produto ja cadastrado",
              "fullTitle": "Testes da funcionalidade produtos PUT - Deve editar um produto ja cadastrado",
              "timedOut": null,
              "duration": 97,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto Ebac ${Math.floor(Math.random() * 1000000)}`;\n//faz o get direto no request(''), depois atribui o valor do id do produto 0 do array para variavel para ser usado posteriormente\ncy.request('/produtos').then(response => {\n  cy.log(response.body.produtos[0]._id);\n  let id = response.body.produtos[0]._id;\n  cy.request({\n    method: 'PUT',\n    url: `/produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": produto,\n      \"preco\": 220,\n      \"descricao\": produto,\n      \"quantidade\": 10\n    }\n  }).then(response => {\n    expect(response.status).to.be.equal(200), expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "229a5715-8c4d-49f2-855f-e38ca8948a74",
              "parentUUID": "7d84f7f9-b4ac-42eb-acee-86d952241597",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT - Alterar produto cadastrado previamente com comando personalizado",
              "fullTitle": "Testes da funcionalidade produtos PUT - Alterar produto cadastrado previamente com comando personalizado",
              "timedOut": null,
              "duration": 84,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produtoNovo = `Produto Ebac ${Math.floor(Math.random() * 1000000)}`;\nlet produto = `Produto Ebac ${Math.floor(Math.random() * 1000000)}`;\n//Cadastrando produto\ncy.cadastrarProduto(token, produtoNovo, 100, produtoNovo, 10).then(response => {\n  let id = response.body._id;\n  cy.log(response.body._id);\n  cy.request({\n    method: 'PUT',\n    url: `/produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": produto,\n      \"preco\": 220,\n      \"descricao\": produto,\n      \"quantidade\": 10\n    }\n  }).then(response => {\n    expect(response.status).to.be.equal(200), expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "d2b7fe66-10d3-4c51-aba6-432029634efb",
              "parentUUID": "7d84f7f9-b4ac-42eb-acee-86d952241597",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE - Deve excluir um produto cadastrado e editado anteriormente com comando personalizado",
              "fullTitle": "Testes da funcionalidade produtos DELETE - Deve excluir um produto cadastrado e editado anteriormente com comando personalizado",
              "timedOut": null,
              "duration": 78,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produtoNovo = `Produto Ebac ${Math.floor(Math.random() * 1000000)}`;\ncy.cadastrarProduto(token, produtoNovo, 100, produtoNovo, 10).then(response => {\n  let id = response.body._id;\n  cy.log(response.body._id);\n  cy.deletarProduto(token, id).then(response => {\n    expect(response.status).to.be.equal(200), expect(response.body.message).to.equal('Registro excluído com sucesso');\n  });\n});",
              "err": {},
              "uuid": "d49229dd-e991-477d-a894-bd8a51ce42e3",
              "parentUUID": "7d84f7f9-b4ac-42eb-acee-86d952241597",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5eeee467-3459-4474-a155-3ea61c4a10b6",
            "58b33bd7-1665-4d55-9e5a-015dd9c5ebe7",
            "c42711d5-81dc-478c-a478-3a7e557a6d2c",
            "7607d512-0c63-41e1-9c7a-d7d34c01f89b",
            "229a5715-8c4d-49f2-855f-e38ca8948a74",
            "d2b7fe66-10d3-4c51-aba6-432029634efb",
            "d49229dd-e991-477d-a894-bd8a51ce42e3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 623,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}